version: "3"

services:
  webapp:
    # python + poetry + gunicorn + psycopg2-binary + environs[django] + django + сайт
    # установка сначала в локальное окружение на хосте с помощью скрипта, 
    #потом установка в контейнер на основе poetry.lock-файла
    build: .
    depends_on:
      - db
    volumes:
      - .:/code
    # env_file: .env
    environment:
      - "DJANGO_SECRET_KEY=django-insecure-t#lsan$$1-a@ci)o2bimd1yez5_9#nau+@nh$$hw%ugaw+oc5^g_"
      - "DJANGO_DEBUG=True"
      - "DJANGO_SECURE_SSL_REDIRECT=False"
      - "DJANGO_SECURE_HSTS_SECONDS=0"
      - "DJANGO_SECURE_HSTS_INCLUDE_SUBDOMAINS=False"
      - "DJANGO_SECURE_HSTS_PRELOAD=False"
      - "DJANGO_SESSION_COOKIE_SECURE=False"
      - "DJANGO_CSRF_COOKIE_SECURE=False"
    command: python3 /code/manage.py runserver 0.0.0.0:8000
    # command: gunicorn config.wsgi -b 0.0.0.0:8000
  db:
    build: './deploy/build/db'
    volumes:
      - db_eve:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_PASSWORD=postgres"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=postgres"
  nginx:
    build: './deploy/build/nginx'
    depends_on:
      - webapp
    volumes:
      # флаг :ro - чтобы не изменялись файлы внутри контейнеров.
      - ./deploy/log/nginx:/var/log/nginx #log файлы.
      - ./deploy/conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro #Конфигурация nginx.
      - ./deploy/conf/nginx/conf.d:/etc/nginx/conf.d:ro #Конфигурация nginx, более ручная
      - ./deploy/conf/nginx/ssl:/etc/nginx/ssl:ro #сертификаты
    ports:
      - 80:80
volumes:
  db_eve:
    external: true
