version: "3"
services:
  webapp:
    # python + poetry + gunicorn + psycopg2-binary + environs[django] + django + сайт
    build: .
    depends_on:
      - db
    volumes:
      - .:/code
      - ~/.cache/pypoetry:/root/.cache/pypoetry
    environment:
      - "DJANGO_SECRET_KEY=django-insecure-t#lsan$$1-a@ci)o2bimd1yez5_9#nau+@nh$$hw%ugaw+oc5^g_"
      - "DJANGO_DEBUG=True"
      - "CSRF_TRUSTED_HOSTS=127.0.0.1,localhost"
      - "CELERY_BROKER_URL=redis://redis:6379/0"
      - "CELERY_RESULT_BACKEND=redis://redis:6379/1"
    command: python3 /code/manage.py runserver 0.0.0.0:8000
    restart: unless-stopped
    # command: gunicorn config.wsgi -b 0.0.0.0:8000
  db:
    build: './deploy/build/db'
    volumes:
      - db_eve:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_PASSWORD=postgres"
      - "POSTGRES_USER=postgres"
      - "POSTGRES_DB=postgres"
    restart: unless-stopped
  nginx:
    build: './deploy/build/nginx'
    depends_on:
      - webapp
    volumes:
      - ./deploy/log/nginx:/var/log/nginx #log файлы.
      - ./deploy/conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro #Конфигурация nginx.
      - ./deploy/conf/nginx/conf.d:/etc/nginx/conf.d:ro #Конфигурация nginx
      - ./deploy/conf/nginx/ssl:/etc/nginx/ssl:ro #сертификаты
    ports:
      - 80:80
    restart: unless-stopped
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
  celery:
    build: .
    depends_on:
      - redis
      - webapp
    environment:
      - "CELERY_BROKER_URL=redis://redis:6379/0"
      - "CELERY_RESULT_BACKEND=redis://redis:6379/1"
    command: celery -A celerytasks.tasks worker --loglevel=info -E
    volumes:
      - .:/code
      - ~/.cache/pypoetry:/root/.cache/pypoetry
    restart: unless-stopped
  flower:
    image: mher/flower
    command: celery --broker=redis://redis:6379/0 flower --port=5555
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - celery
    restart: unless-stopped
volumes:
  db_eve:
    external: true
  redis_data:
